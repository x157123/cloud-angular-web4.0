// global

@use 'variable';

* {
  outline: none;
  box-sizing: border-box;
}

body {
  font-family: variable.$bodyfont;
  margin: 0;
  overflow-x: hidden;
  color: variable.$bodytext;
  font-weight: 300;
  background: variable.$inverse;
}

html {
  position: relative;
  min-height: 100%;
  background: variable.$white;
}

.main-container {
  display: flex;
  flex-direction: column;
  position: relative;
  overflow: hidden;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}

.mat-drawer-container {
  background: variable.$bodycolor;
}

html .page-wrapper {
  height: calc(100vh - 64px);

  .page-content {
    padding: 15px 15px;
    //max-width: 1300px;
    margin: 0 auto;
  }
}

// a tag

a:hover,
a:focus,
a {
  text-decoration: none;
}

a.link {
  color: variable.$headingtext;
  text-decoration: none;

  &:hover,
  &:focus {
    color: variable.$themecolor;
  }
}

.img-responsive {
  width: 100%;
  height: auto;
  display: inline-block;
}

hr {
  border: 0px;
  height: 1px;
  background: variable.$border;
}

html body .mdi:before,
html body .mdi-set {
  line-height: initial;
}

code {
  padding: 0.2rem 0.4rem;
  font-size: 90%;
  color: variable.$danger;
  background-color: variable.$light-danger;
  border-radius: 0.25rem;
}

.box {
  border-radius: variable.$radius;
  padding: 10px;
}

.list-inline {
  margin-left: 0px;
  padding: 0px;

  li {
    display: inline-block;
    list-style: none;
    margin-right: 10px;

    &:last-child {
      margin-right: 0px;
    }
  }
}

.button-row button {
  margin-bottom: 5px;
  margin-right: 5px;
}

html body {
  .position-relative {
    position: relative;
  }

  // list
  .clear {
    clear: both;
  }

  ol li {
    margin: 5px 0;
  }

  // display
  .dl {
    display: inline-block;
  }

  .db {
    display: block;
  }

  //   opacity
  .op-5 {
    opacity: 0.5;
  }

  .op-3 {
    opacity: 0.3;
  }

  .rounded {
    border-radius: variable.$radius;
  }

  //   flex
  .ml-auto {
    margin-left: auto;
  }

  .d-flex {
    display: flex;
  }

  .align-items-center {
    align-items: center;
  }

  .no-shrink {
    flex-shrink: 0;
  }

  .oh {
    overflow: hidden;
  }

  .hide {
    display: none;
  }

  .img-circle {
    border-radius: 100%;
  }

  .radius {
    border-radius: variable.$radius;
  }

  .no-shadow {
    box-shadow: none;
  }

  //   align vertical
  .vt {
    vertical-align: top;
  }

  .vm {
    vertical-align: middle;
  }

  .vb {
    vertical-align: bottom;
  }

  //   horizontal align
  .text-center {
    text-align: center;
  }

  .text-right {
    text-align: right;
  }

  .text-left {
    text-align: left;
  }

  //   border
  .b-0 {
    border: none;
  }

  .b-r {
    border-right: 1px solid variable.$border;
  }

  .b-l {
    border-left: 1px solid variable.$border;
  }

  .b-b {
    border-bottom: 1px solid variable.$border;
  }

  .b-t {
    border-top: 1px solid variable.$border;
  }

  .b-all {
    border: 1px solid variable.$border;
  }
}

.mat-mdc-input-element {
  font: inherit;
  background: rgba(0, 0, 0, 0);
  color: currentColor;
  border: none;
  outline: none;
  padding: 0;
  margin: 0;
  width: 100%;
  max-width: 100%;
  vertical-align: bottom;
  text-align: inherit;
  box-sizing: content-box;
}


/**设置滚动条**/
.edit-content-info-scrollbar {
  overflow: auto;
  background-color: #ffffff;
  padding: 0 2px 2px 2px;
}

.edit-content-info-scrollbar::-webkit-scrollbar {
  width: 1px;
}

/* 滚动条轨道 */
.edit-content-info-scrollbar::-webkit-scrollbar-track {
  background-color: #f1f1f1; /* 设置轨道的背景颜色 */
}

/* 滚动条滑块 */
.edit-content-info-scrollbar::-webkit-scrollbar-thumb {
  background-color: #888; /* 设置滑块的背景颜色 */
  border-radius: 10px; /* 设置滑块的圆角 */
}

/* 鼠标悬停在滚动条上时的滑块 */
.edit-content-info-scrollbar::-webkit-scrollbar-thumb:hover {
  background-color: #555; /* 设置悬停状态下滑块的背景颜色 */
}
